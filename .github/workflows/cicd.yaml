name: Salesforce CI/CD Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  TEST_LEVEL: RunLocalTests
  APEX_TEST_RESULT_DIR: test-results

jobs:
  validate-pr:
    name: Validate PR Deployment and Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Environment
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y jq bc unzip wget
        shell: bash

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Salesforce CLI
        run: npm install --global sfdx-cli

      - name: Authenticate to DevHub
        run: |
          echo "${{ secrets.SFDX_JWT_AUTH_KEY }}" > server.key
          sfdx auth:jwt:grant --client-id ${{ secrets.SFDX_CLIENT_ID }} \
            --jwt-key-file server.key --username ${{ secrets.SFDX_DEVHUB_USERNAME }} \
            --instance-url https://orgfarm-9e770cec2a-dev-ed.develop.my.salesforce.com --setdefaultdevhubusername -a DevHub
        shell: bash

      - name: Deployment Validation
        run: sfdx force:source:deploy --checkonly --sourcepath force-app --targetusername DevHub

      - name: Run Apex Tests
        run: |
         sfdx apex run test --target-org DevHub  --test-level ${{ env.TEST_LEVEL }} --code-coverage --output-dir ${{ env.APEX_TEST_RESULT_DIR }} --result-format human --wait 10
        shell: bash

      - name: Check Coverage
        run: |
          set -e
          totalCoverage=$(sfdx force:apex:test:report -u DevHub --codecoverage --json | jq '.result.summary.testRunCoverage')
          echo "Total Coverage: $totalCoverage%"
          if (( $(echo "$totalCoverage < 75" | bc -l) )); then
            echo "❌ Code coverage below 75%. Failing build."
            exit 1
          else
            echo "✅ Code coverage is sufficient."
          fi
        shell: bash

      - name: Static Code Analysis with PMD
        run: |
          wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F6.55.0/pmd-bin-6.55.0.zip
          unzip -q pmd-bin-6.55.0.zip
          ./pmd-bin-6.55.0/bin/run.sh pmd -d force-app -R rulesets/apex/apex-design.xml -f text
        shell: bash

      - name: ESLint + Prettier
        run: |
          npm ci
          npx eslint force-app --ext .js --max-warnings 0
          npx prettier --check "force-app/**/*.{cls,js,html}"
        shell: bash

      - name: PR Rejection Conditions
        if: failure()
        run: echo "❌ Deployment or Code Quality Checks failed. PR will be rejected."
        shell: bash

  deploy-main:
    name: Deploy to UAT/Prod on Merge
    runs-on: ubuntu-latest
    needs: validate-pr
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Salesforce CLI
        run: npm install --global sfdx-cli

      - name: Authenticate to Production Org
        run: |
          echo "${{ secrets.SFDX_JWT_AUTH_KEY }}" > server.key
          sfdx auth:jwt:grant --client-id ${{ secrets.SFDX_CLIENT_ID }} \
            --jwt-key-file server.key --username ${{ secrets.SFDX_PROD_USERNAME }} \
            --instance-url https://orgfarm-9e770cec2a-dev-ed.develop.my.salesforce.com -s
        shell: bash

      - name: Deploy to Production
        run: |
         sfdx force:source:deploy --targetusername ${{ secrets.SFDX_PROD_USERNAME }} --manifest manifest/package.xml --testlevel RunLocalTests --wait 10
        shell: bash

      - name: Post-deploy Tests
        run: |
          sfdx force:apex:test:run --targetusername ${{ secrets.SFDX_PROD_USERNAME }} \
            --resultformat human --wait 10
        shell: bash
